function afit, wav_sp, a
  ; Calculate and return normalised attenuation curve
  nn = n_elements(wav_sp)
  D = (a[4] * wav_sp^2 * 0.035^2) / ((wav_sp^2 - 0.2175^2)^2 + (wav_sp^2 * 0.035^2))
  test = a[0] + (a[1]/wav_sp) + (a[2]*wav_sp^(-2)) + (a[3]*wav_sp^(-3)) + D + a[5]
  
  ; Use explicit index for normalisation to avoid any out-of-range issues
  last_index = nn - 1
  if last_index ge 0 AND test[last_index] ne 0 then begin
    return, test / test[last_index]
  endif else begin
    ; Handle potential division by zero
    return, test
  endelse
end

pro func_fit_extc
;
; Fits the galaxy extinction curve generated by CREATE_EXTC 
; program. Includes global fits and fits out to reference 
; galactocentric radii (more can be added depending 
; on preference).
; INPUTS:
; GAL_NAME (str) : Galaxy identifier for the output ps file
; IDL save file output by CREATE_ EXTC containing wavelengths 
; and the normalised extinction (mags) curve for the whole
; galaxy out to reference wavelengths
; REF1_LABEL (str) : Radii for the first reference point used
;     in plot legend
; REF2_LABEL (str) : Radii for the second reference point used
;     in plot legend
  ; Restore data
  restore, 'atten.sav'
; OUTPUTS:
; PS file with name GAL_NAME_EXTCURVE.PS
; Fit coefficients printed to the screen 
  
  GAL_NAME = 'N3938'
  ref1_label = '0-2 kpc'
  ref2_label = '2-14 kpc'
 ;--------------------------------------------------------------
  ; Restrict to wavelengths < 5000 as in EXTC
  ind = where(lambda lt 5000)
  lambda = lambda[0:max(ind)]
  atten_norm = atten_norm[0:max(ind)]
  atten_norm_rin = atten_norm_rin[0:max(ind)]
  atten_norm_ref1 = atten_norm_ref1[0:max(ind)]
  
  ; Create wavelength array for spline interpolation
  wav_sp = 0.09 + 0.00035 * findgen(1001)
  nwav = n_elements(wav_sp)
  
  ; Parameter constraints 
  pi = replicate({fixed:0, limited:[0,0], limits:[0.D,0.D]}, 6)
  pi[1].limited = [1, 1] & pi[1].limits = [1.1, 4.1]
  pi[2].limited = [1, 1] & pi[2].limits = [-0.8, 4.08]
  pi[3].limited = [1, 1] & pi[3].limits = [0.005, 0.05]
  pi[4].limited = [1, 1] & pi[4].limits = [0.1, 5.0]
  pi[5].limited = [1, 1] & pi[5].limits = [0.1, 100.0]
  
  ; Interpolate data to new wavelength grid
  z = spline(lambda/1e4, atten_norm, wav_sp)
  z1 = spline(lambda/1e4, atten_norm_rin, wav_sp)
  z2 = spline(lambda/1e4, atten_norm_ref1, wav_sp)
  
  ; Error estimates
  rerr = z/40.
  
  ; Fit first curve
  start = [-4.3, 2.71, -0.191, 0.0121, 1.57, 3.15]
  result = mpfitfun('afit', wav_sp, z, rerr, start, PARINFO=pi, status=status1)
  
  ; Check if fit was successful
  if status1 GT 0 then begin
    print, 'First fit parameters:', result
    
    ; Calculate fitted curve for first dataset
    D = (result[4] * wav_sp^2 * 0.035^2) / ((wav_sp^2 - 0.2175^2)^2 + (wav_sp^2 * 0.035^2))
    conf = result[0] + (result[1]/wav_sp) + (result[2]*wav_sp^(-2)) + (result[3]*wav_sp^(-3)) + D + result[5]
    last_index = nwav - 1
    if last_index ge 0 AND conf[last_index] ne 0 then begin
      fit_atten = conf / conf[last_index]
    endif else begin
      fit_atten = conf
    endelse
  endif else begin
    print, 'First fit failed with status:', status1
    ; Default to the starting values
    fit_atten = dblarr(nwav) + 1.0
  endelse
  
  ; Fit second curve (out to a reference radius)
  rerr = z1/40.
  start = [-4.4, 2.72, -0.192, 0.0120, 1.56, 3.16]
  result1 = mpfitfun('afit', wav_sp, z1, rerr, start, PARINFO=pi, status=status2)
  
  ; Check if fit was successful
  if status2 GT 0 then begin
    print, '0-2 kpc fit parameters:', result1
    
    ; Calculate fitted curve for second dataset
    D = (result1[4] * wav_sp^2 * 0.035^2) / ((wav_sp^2 - 0.2175^2)^2 + (wav_sp^2 * 0.035^2))
    conf = result1[0] + (result1[1]/wav_sp) + (result1[2]*wav_sp^(-2)) + (result1[3]*wav_sp^(-3)) + D + result1[5]
    last_index = nwav - 1
    if last_index ge 0 AND conf[last_index] ne 0 then begin
      rin_fit = conf / conf[last_index]
    endif else begin
      rin_fit = conf
    endelse
  endif else begin
    print, 'Second fit failed with status:', status2
    ; Default to the starting values
    rin_fit = dblarr(nwav) + 1.0
  endelse
  
  ; Fit third curve (out to second reference radius)
  rerr = z2/40.
  result2 = mpfitfun('afit', wav_sp, z2, rerr, start, PARINFO=pi, status=status3)
  
  ; Check if fit was successful
  if status3 GT 0 then begin
    print, '2-14 kpc fit parameters:', result2
    
    ; Calculate fitted curve for third dataset
    D = (result2[4] * wav_sp^2 * 0.035^2) / ((wav_sp^2 - 0.2175^2)^2 + (wav_sp^2 * 0.035^2))
    conf = result2[0] + (result2[1]/wav_sp) + (result2[2]*wav_sp^(-2)) + (result2[3]*wav_sp^(-3)) + D + result2[5]
    last_index = nwav - 1
    if last_index ge 0 AND conf[last_index] ne 0 then begin
      ref1_fit = conf / conf[last_index]
    endif else begin
      ref1_fit = conf
    endelse
  endif else begin
    print, 'Third fit failed with status:', status3
    ; Default to the starting values
    ref1_fit = dblarr(nwav) + 1.0
  endelse
  
  ; Plot results to screen and ps file
  window, 0, xsize=800, ysize=600, title='NGC 3938 Extinction Curves'
  plot, wav_sp, fit_atten, xrange=[0.08, 0.44], xstyle=1, yrange=[0, 20], ystyle=1, $
        xtitle='!4k!X [!4l!Xm]', ytitle='A!D!4k!X!N/A!DB!N', $
        thick=2, xthick=2, ythick=2, charsize=1.5, charthick=2, $
        title='NGC 3938 Extinction Curves'
  
  oplot, wav_sp, rin_fit, color=250, thick=2  ; Red
  oplot, wav_sp, ref1_fit, color=100, thick=2 ; Blue
  
  ; Legend
  x0 = 0.35
  y0 = 19
  dy = 1.5
  
  plots, [x0, x0+0.03], [y0, y0], thick=2
  xyouts, x0+0.035, y0-0.3, 'NGC 3938', charsize=1.5, charthick=2
  
  plots, [x0, x0+0.03], [y0-dy, y0-dy], color=250, thick=2
  xyouts, x0+0.035, y0-dy-0.3, '0-2 kpc', charsize=1.5, charthick=2, color=250
  
  plots, [x0, x0+0.03], [y0-2*dy, y0-2*dy], color=100, thick=2
  xyouts, x0+0.035, y0-2*dy-0.3, '2-14 kpc', charsize=1.5, charthick=2, color=100
  
  set_plot, 'PS'
  device, filename=GAL_NAME+'_extcurve.ps', /encapsulated, bits=8, $
          xsize=8, ysize=6, /inches, /color
  
  plot, wav_sp, fit_atten, xrange=[0.08, 0.44], xstyle=1, yrange=[0, 20], ystyle=1, $
        xtitle='!4k!X [!4l!Xm]', ytitle='A!D!4k!X!N/A!DB!N', $
        thick=2, xthick=2, ythick=2, charsize=1.5, charthick=2, $
        title='NGC 3938 Extinction Curves'
  
  oplot, wav_sp, rin_fit, color=250, thick=2  ; Red
  oplot, wav_sp, ref1_fit, color=100, thick=2 ; Blue
  
  ; Legend
  plots, [x0, x0+0.03], [y0, y0], thick=2
  xyouts, x0+0.035, y0-0.3, 'NGC 3938', charsize=1.5, charthick=2
  
  plots, [x0, x0+0.03], [y0-dy, y0-dy], color=250, thick=2
  xyouts, x0+0.035, y0-dy-0.3, ref1_label, charsize=1.5, charthick=2, color=250
  
  plots, [x0, x0+0.03], [y0-2*dy, y0-2*dy], color=100, thick=2
  xyouts, x0+0.035, y0-2*dy-0.3, ref2_label, charsize=1.5, charthick=2, color=100
  
  device, /close
  set_plot, 'X'
end
